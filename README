This source tree contains the source code for the Trace Compass plugins for
Eclipse.

The plugins are categorized as follows:
org.eclipse.tracecompass.ctf.*          Common Trace Format (CTF) reader library
org.eclipse.tracecompass.gdbtrace.*     Support for reading and viewing GDB traces
org.eclipse.tracecompass.lttng2.*       LTTng 2.x integration
org.eclipse.tracecompass.tmf.*          Core framework
org.eclipse.tracecompass.statesystem.*  State System library
org.eclipse.tracecompass.rcp.*  Code specific to the RCP version

See the plugins.svg file for a diagram showing the dependencies between the
different plugins.


To set up the environment to build Trace Compass from within Eclipse, see this
wiki page:
http://wiki.eclipse.org/Trace_Compass/Development_Environment_Setup




To build the plugins manually using Maven, simply run the following command from
the top-level directory:
$ mvn clean install


The default command will compile and run the unit tests. Running the tests can
take some time, to skip them you can append "-Dmaven.test.skip=true" to the
'mvn' command:
$ mvn clean install -Dmaven.test.skip=true


The RCP is not built by default, to build it you need to add "-Pbuild-rcp" to
the 'mvn' command:
$ mvn clean install -Pbuild-rcp -Dmaven.test.skip=true

This will build the RCP for all supported architectures. The resulting archives
will be placed in org.eclipse.tracecompass.rcp.product/target/products


To build a local p2 update site
$ mvn clean install -Pbuild-update-site

This will place the p2 update site under the default location
/var/www/tools/tracecompass/nightly/

To change the package location, use:
$ mvn clean install -Pbuild-update-site "-DsiteDestination=<package destination>"

where <package destination> is the absolute path to destination directory on
your disk.

